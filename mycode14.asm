.MODEL SMALL
.STACK 100H

.DATA
STRING DB 5 DUP(?)
DASH DB '-$'
.CODE
MAIN PROC
MOV AX, @DATA
MOV DS, AX

MOV AX, 1
XOR DX, DX    ;THIS PUTS ZERO IN DX
XOR CX,CX     ;THIS PUTS ZERO IN CX
ADD DX, AX
ADD DX, AX
MOV BX,DX

ADD CX,AX
MUL BX
SUB CX,AX
MUL BX
ADD CX,AX
MUL BX
SUB CX,AX
MUL BX
ADD CX,AX
MUL BX
SUB CX,AX
MUL BX
ADD CX,AX
MUL BX
SUB CX,AX
MUL BX
ADD CX,AX
MUL BX
SUB CX,AX            ;GOT THE FINAL RESULT

XOR BX,BX            ;RESET BX TO 0
MOV BX, 65535        ;STORE HEX VALUE FFFF TO BX
SUB BX,CX            ;SUB FFFF TO FINAL RESULT TO GET THE POSITIVE VALUE OF THE NEGATIVE INTEGER
ADD BX, 1            ;FIXING 0 INDEX BY ADDING 1
XOR AX,AX            ;RESET AX TO 0
MOV AX,BX            ;STORING BX INTO AX FOR PRINTING PURPOSE

;CONVERTING 16BIT HEX DIGIT INTO DECIMAL AND PRINTING TO SCREEN

PUSH BX              ; RESERVING BX AND CX FOR LATER USE BY PUSHIN STACK
PUSH CX
LEA SI, STRING
	
MOV BX, 10			 ;STORING 2 DIGITS NUMBER AS CHARACTER IN STRING
XOR CX, CX
DIVISION: XOR DX,DX
DIV BX
PUSH DX
INC CX
CMP AX, 0
JNE DIVISION
STORE: POP DX
ADD DL, 48
MOV [SI], DL
INC SI
LOOP STORE
MOV [SI], '$ '

POP CX
POP BX

LEA DX, DASH
MOV AH, 9
INT 21H
    
LEA DX, STRING       ;GET THAT 2 DIGIT NUMBER WHICH IS CHARACTER FROM STRING
MOV AH, 9
INT 21H


MAIN ENDP
END MAIN